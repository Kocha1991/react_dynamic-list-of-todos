{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterTypes","TodoList","_ref","todos","onClickTodo","modal","_jsxs","className","children","_jsx","map","todo","id","completed","title","type","onClick","TodoFilter","query","onSearch","onClearSearch","onFilter","filter","value","onChange","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","modalTodo","—ÅloseModal","_useState","useState","_useState2","_slicedToArray","user","setUser","useEffect","userId","concat","carentUser","name","href","App","setTodos","_useState3","_useState4","setModalTodo","_useState5","_useState6","setQuery","_useState7","_useState8","appliedQuery","setAppliedQuery","_useState9","_useState10","setFilter","_useState11","_useState12","isLoader","setIsLoader","fetchTodos","toLowerCase","includes","applyQuery","useCallback","f","timerId","clearTimeout","_len","arguments","length","args","Array","_key","apply","debounce","filteredTodos","_Fragment","e","target","event","currentTodo","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c583893c.chunk.js","sourcesContent":["export enum FilterTypes {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\ntype Props = {\n  query: string;\n  onSearch: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onClearSearch: () => void;\n  onFilter: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  filter: 'all' | 'completed' | 'active'\n};\n\nexport const TodoFilter: React.FunctionComponent<Props> = ({\n  query,\n  onSearch,\n  onClearSearch,\n  onFilter,\n  filter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={onFilter}\n        >\n          <option value={FilterTypes.All}>All</option>\n          <option value={FilterTypes.Active}>Active</option>\n          <option value={FilterTypes.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onSearch}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={onClearSearch}\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  onClickTodo: (todo: Todo) => void;\n  modal: Todo | undefined\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onClickTodo,\n  modal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) : ''}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onClickTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={\n                      modal?.id === todo.id ? 'far fa-eye-slash' : 'far fa-eye'\n                    }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  modalTodo: Todo\n  —ÅloseModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  modalTodo,\n  —ÅloseModal,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (modalTodo) {\n      getUser(modalTodo?.userId).then(carentUser => (setUser(carentUser)));\n    }\n  }, [modalTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!modalTodo || !user?.name\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${modalTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={—ÅloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {modalTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {modalTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useState, useCallback,\n} from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter, FilterTypes } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst debounce = (f: Function, delay: number) => {\n  let timerId: ReturnType<typeof Number>;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [modalTodo, setModalTodo] = useState<Todo>();\n  const [query, setQuery] = useState<string>('');\n  const [appliedQuery, setAppliedQuery] = useState<string>('');\n  const [filter, setFilter] = useState(FilterTypes.All);\n  const [isLoader, setIsLoader] = useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoader(true);\n\n    getTodos()\n      .then(fetchTodos => {\n        setIsLoader(false);\n        setTodos(appliedQuery ? fetchTodos\n          .filter(todo => todo.title.toLowerCase()\n            .includes(appliedQuery.toLowerCase())) : fetchTodos);\n      });\n  }, [appliedQuery]);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [],\n  );\n\n  const handleSearchTodo = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(e.target.value);\n    applyQuery(e.target.value);\n  };\n\n  const clearSearch = () => {\n    setQuery('');\n    setAppliedQuery('');\n  };\n\n  const closeModal = () => {\n    setModalTodo(undefined);\n  };\n\n  const filteredTodos = filter === FilterTypes.All ? todos : todos.filter((todo) => {\n    if (filter === FilterTypes.Completed) {\n      return todo.completed;\n    }\n\n    return !todo.completed;\n  });\n\n  const handleFilterChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setFilter(event.target.value as FilterTypes);\n  };\n\n  const onClickTodo = (currentTodo: Todo) => setModalTodo(currentTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSearch={handleSearchTodo}\n                onClearSearch={clearSearch}\n                onFilter={handleFilterChange}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoader\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    onClickTodo={onClickTodo}\n                    modal={modalTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodo\n        && (\n          <TodoModal\n            modalTodo={modalTodo}\n            —ÅloseModal={closeModal}\n          />\n        )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}